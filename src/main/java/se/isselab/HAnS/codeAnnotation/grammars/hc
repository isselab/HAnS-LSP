package se.isselab.HAnS.codeAnnotation;


ArrayList<FeatureModelTree> trees;
	ArrayList<String> features;
	private static FileLogger logger;

	public FeatureTreeBaseListener(ArrayList<FeatureModelTree> trees, ArrayList<String> features) {
		logger = new FileLogger(FeatureTreeBaseListener.class);
		this.trees = trees;
		this.features = features;
	}



@Override public void enterFeaturetree(FeatureTreeParser.FeaturetreeContext ctx) {
		logger.info("ChildCountFeaturetree:" + ctx.getChildCount());
		logger.info("Featuretree: " + ctx.getText());
		FeatureModelTree t = new FeatureModelTree(null,ctx.getChild(0).getText());
		List<ParseTree> ruletree = ctx.children;
		for (ParseTree parseTree : ruletree) {
			FeatureModelTree h = new FeatureModelTree(t);
			t.append(h);
		}
		trees.add(t);
	}


@Override public void enterFeature(FeatureTreeParser.FeatureContext ctx) {
		features.add(ctx.getChild(0).getText());
		logger.info("foundfeature:" + ctx.getChild(0).getText() );

		/*
		for(int i = 0; i<ctx.getChildCount(); i++ ) {
			features.add(ctx.getChild(i).getText());
			logger.info("foundfeature:" + ctx.getChild(i).getText() );
		}
		*/
	}